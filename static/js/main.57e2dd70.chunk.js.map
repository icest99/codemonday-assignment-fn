{"version":3,"sources":["App.js","index.js"],"names":["theme","createMuiTheme","typography","fontSize","CustomToolbar","App","useState","data","setData","time","setTime","requestOptions","method","redirect","useEffect","fetch","then","response","json","result","Object","values","Countries","Date","getDate","getMonth","getFullYear","catch","error","console","log","rows","i","forEach","each","TotalDeaths","TotalConfirmed","TotalRecovered","push","id","country","Country","totalcases","totaldeaths","totalrecoveries","className","classNmae","CssBaseline","Math","random","columns","field","headerName","flex","filterable","scrollbarSize","pageSize","disableColumnMenu","components","Toolbar","autoHeight","sortModel","sort","href","style","textDecoration","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAYMA,EAAQC,YAAe,CAC3BC,WAAY,CACVC,SAAU,UAKd,SAASC,IACP,OACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,OA6HSC,MAxHf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,KAITC,EAAiB,CACnBC,OAAQ,MACRC,SAAU,UAIZC,qBAAU,WACRC,MAAM,qCAAsCJ,GACzCK,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLX,EAAQY,OAAOC,OAAOF,EAAOG,YAC7BZ,EACE,IAAIa,KAAKJ,EAAOI,MAAMC,UACpB,KACC,IAAID,KAAKJ,EAAOI,MAAME,WAAa,GACpC,IACA,IAAIF,KAAKJ,EAAOI,MAAMG,kBAG3BC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAI,QAASF,QACxC,IAGH,IAuBIG,EAAO,GAGPC,EAAI,EAwBR,OArBAzB,EAAK0B,SAAQ,SAACC,GAEY,GAApBA,EAAKC,cACPD,EAAKC,YAAc,cAEM,GAAvBD,EAAKE,iBACPF,EAAKE,eAAiB,cAEG,GAAvBF,EAAKG,iBACPH,EAAKG,eAAiB,cAExBN,EAAKO,KAAK,CACRC,GAAIP,EACJQ,QAASN,EAAKO,QACdC,WAAYR,EAAKE,eACjBO,YAAaT,EAAKC,YAClBS,gBAAiBV,EAAKG,iBAExBL,OAIA,sBAAKa,UAAU,MAAf,UACE,oBAAIC,UAAU,QACd,cAACC,EAAA,EAAD,IACA,sBAAKF,UAAU,SAAf,UACE,oBAAIA,UAAU,QAAd,2CACA,gDAAmBpC,QAErB,cAAC,IAAD,CAAkBT,MAAOA,EAAzB,SACE,qBAAK6C,UAAU,YAAf,SACE,cAAC,IAAD,CACEN,GAAIS,KAAKC,SACTlB,KAAMA,EACNmB,QA/DM,CACd,CAAEC,MAAO,UAAWC,WAAY,UAAWC,KAAM,GACjD,CACEF,MAAO,aACPC,WAAY,kBACZC,KAAM,EACNC,YAAY,GAEd,CACEH,MAAO,cACPC,WAAY,eACZC,KAAM,EACNC,YAAY,GAEd,CACEH,MAAO,kBACPC,WAAY,kBACZC,KAAM,EACNC,YAAY,IA8CNC,cAAe,GACfC,SAAU,GACVC,mBAAmB,EACnBC,WAAY,CACVC,QAASvD,GAEXwD,YAAU,EACVC,UAAW,CACT,CACEV,MAAO,aACPW,KAAM,eAMhB,+CACY,IACV,mBACEC,KAAK,0BACLC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,WAF1C,uCCrIRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.57e2dd70.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  DataGrid,\n  GridToolbarContainer,\n  GridFilterToolbarButton,\n  GridDensitySelector,\n} from \"@material-ui/data-grid\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n//styling for table text size\nconst theme = createMuiTheme({\n  typography: {\n    fontSize: \"1rem\",\n  },\n});\n\n//custom Toolbar above table\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridDensitySelector />\n      <GridFilterToolbarButton />\n    </GridToolbarContainer>\n  );\n}\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [time, setTime] = useState(\"\");\n  var timeValue = \"\";\n  var requestOptions = {\n    method: \"GET\",\n    redirect: \"follow\",\n  };\n\n  //fetch Data once upon loading and set it to {data} variable\n  useEffect(() => {\n    fetch(\"https://api.covid19api.com/summary\", requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        setData(Object.values(result.Countries));\n        setTime(\n          new Date(result.Date).getDate() +\n            \"/\" +\n            (new Date(result.Date).getMonth() + 1) +\n            \"/\" +\n            new Date(result.Date).getFullYear()\n        );\n      })\n      .catch((error) => console.log(\"error\", error));\n  }, []);\n\n  //make a columns format for Material UI DataGrid\n  const columns = [\n    { field: \"country\", headerName: \"Country\", flex: 1 },\n    {\n      field: \"totalcases\",\n      headerName: \"Total Confirmed\",\n      flex: 1,\n      filterable: false,\n    },\n    {\n      field: \"totaldeaths\",\n      headerName: \"Total Deaths\",\n      flex: 1,\n      filterable: false,\n    },\n    {\n      field: \"totalrecoveries\",\n      headerName: \"Total Recovered\",\n      flex: 1,\n      filterable: false,\n    },\n  ];\n\n  //create an empty array for storing value from API\n  let rows = [];\n\n  //counting variable for creating unique id, which is a requirement for displaying DataGrid\n  let i = 0;\n\n  //iterate thorugh each country's array of data, then push selected data into {rows}\n  data.forEach((each) => {\n    //check for 0\n    if (each.TotalDeaths == 0) {\n      each.TotalDeaths = \"unreported\";\n    }\n    if (each.TotalConfirmed == 0) {\n      each.TotalConfirmed = \"unreported\";\n    }\n    if (each.TotalRecovered == 0) {\n      each.TotalRecovered = \"unreported\";\n    }\n    rows.push({\n      id: i,\n      country: each.Country,\n      totalcases: each.TotalConfirmed,\n      totaldeaths: each.TotalDeaths,\n      totalrecoveries: each.TotalRecovered,\n    });\n    i++;\n  });\n\n  return (\n    <div className=\"App\">\n      <di classNmae=\"top\"></di>\n      <CssBaseline />\n      <div className=\"header\">\n        <h1 className=\"head1\">Corona Virus Situation Report</h1>\n        <h3>last updated: {time}</h3>\n      </div>\n      <MuiThemeProvider theme={theme}>\n        <div className=\"dataTable\">\n          <DataGrid\n            id={Math.random()}\n            rows={rows}\n            columns={columns}\n            scrollbarSize={15}\n            pageSize={10}\n            disableColumnMenu={true}\n            components={{\n              Toolbar: CustomToolbar,\n            }}\n            autoHeight\n            sortModel={[\n              {\n                field: \"totalcases\",\n                sort: \"desc\",\n              },\n            ]}\n          />\n        </div>\n      </MuiThemeProvider>\n      <footer>\n        Made with{\" \"}\n        <a\n          href=\"https://covid19api.com/\"\n          style={{ textDecoration: \"none\", color: \"#5dbae8\" }}\n        >\n          api.covid19api.com\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}